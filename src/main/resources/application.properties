spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${URL_DATABASE:jdbc:postgresql://localhost:5433/propostas}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:root}

spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

server.error.include-message = always
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}	

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=proposta

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.spring.cloud.jdbc.enabled=false

management.endpoints.info.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.exposure.exclude=env,beans
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=servico-proposta
management.metrics.tags.ambiente=desenvolvimento

management.health.db.enabled=true
management.endpoint.health.show-details=always
management.endpoint.info.enabled=true
management.security.enabled=false

system.analiseClient=${AVALIACAO_FINANCEIRA_API_URL:http://localhost:9999}
system.cartaoClient=${CONSULTA_CARTAO_API_URL:http://localhost:8888}

CRIPTOGRAFIA_SECRET:Imb2p5qYFdug4iaBgaeITQ